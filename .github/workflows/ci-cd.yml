name: CI/CD Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    name: Run Tests on PR
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3

      - name: Frontend Test & Lint
        working-directory: frontend
        run: |
          npm ci
          npm run lint

      - name: Backend Test
        working-directory: backend
        run: |
          npm ci
          echo "Run backend unit/integration tests here"

  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build, Push Docker Images & Deploy
    if: github.event_name == 'push'
    needs: run-tests
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: nikhil788/taskmanager-frontend:latest

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: nikhil788/taskmanager-backend:latest

      - name: Run Security Scan (Frontend)
        run: |
          npm install -g snyk
          cd frontend && snyk test || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Security Scan (Backend)
        run: |
          cd backend && snyk test || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Deploy to Staging
        run: echo "Trigger staging deployment here (via SSH/webhook/script)"

  approve-and-deploy-prod:
    runs-on: ubuntu-latest
    name: Deploy to Production with Approval
    if: github.event_name == 'push'
    needs: build-and-deploy
    environment:
      name: production
      url: https://your-production-site.com
    steps:
      - name: Deploy to Production
        run: echo "Trigger production deploy here (via webhook/SSH/script)"
